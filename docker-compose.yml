#
#services:
#  db:
#    image: mysql:latest
#    restart: always
#    environment:
#      MYSQL_ROOT_PASSWORD: password # 設置 root 用戶的密碼
#      MYSQL_DATABASE: ipfs_testspring       # 創建的資料庫
#      MYSQL_USER: user                  # 創建的普通用戶
#      MYSQL_PASSWORD: 0000              # 普通用戶的密碼
#    ports:
#      - "3306:3306"                      # 映射 MySQL 端口
#    volumes:
#      - mysql_data:/var/lib/mysql        # 資料持久化
#
#volumes:
#  mysql_data:


#services:
#  ipfs:
#    image: ipfs/go-ipfs:latest  # 使用 IPFS 的官方 Docker 映像
#    container_name: ipfs-node  # 容器名稱
#    restart: always  # 當容器停止時自動重啟
#    ports:
#      - "4001:4001"  # 映射 IPFS 端口（P2P 通信）
#      - "5001:5001"  # 映射 API 端口
#      - "8080:8080"  # 映射 HTTP 網頁端口
#    volumes:
#      - ipfs_data:/data/ipfs  # 資料持久化，保持 IPFS 資料不會隨著容器刪除而丟失
#    environment:
#      IPFS_PROFILE: "server"  # 可選，設定 IPFS 節點的配置檔案
#    command: "daemon"  # 啟動 IPFS 節點
#
#volumes:
#  ipfs_data:
#    driver: local



#services:
#  redis:
#    image: redis:7.2   # 或使用最新版 redis:latest
#    container_name: my-redis
#    ports:
#      - "6380:6379"     # 主機的6379 連到 container 裡的6379
#    volumes:
#      - redis-data:/data  # 持久化 Redis 資料
#    restart: unless-stopped
#
#volumes:
#  redis-data:
#
services:
  redis:
    image: redis:7.2   # 或使用最新版 redis:latest
    container_name: my-redis1
    ports:
      - "6379:6379"     # 主機的6379 連到 container 裡的6379
    volumes:
      - redis-data:/data  # 持久化 Redis 資料
    restart: unless-stopped

volumes:
  redis-data:
